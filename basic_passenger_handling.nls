to bus-actions
    show bus_passengers
    show free-space
    show passenger-orders 
  drop-passengers
  pick-up-drop-same-station
  pickup-passengers
  move-to-next
end


to pickup-passengers
  ;pick up passengers en route
  let stop-passengers get-passengers-at-stop current_stop
  
  foreach stop-passengers[
    let pick-up 0
    let id item 0 ?
    let goal item 1 ?
    show id
    show goal
    ifelse member? goal next-stops and free-space > 0[     ;This checks if the goal is en route
      
      write "Picked up passenger with a goal on route with id:"
      show id
      pick-up-passenger id
      set free-space (free-space - 1)
      
    ][
    let shortest-route get-shortest-route current_stop goal ;If the goal is not in next-stops, we check if any of the stops of the shortest route is on our route
    let order []
    foreach but-last shortest-route[
      let short-route-id ?
      foreach next-stops[
        let next-stop-id ?
        if short-route-id = next-stop-id[
          set order []
          set pick-up 1
          set order lput id order
          set order lput next-stop-id order
        ]
      ]
    ]
    if pick-up = 1 and free-space > 0[
      set passenger-orders lput order passenger-orders
      pick-up-passenger id
      set free-space (free-space - 1)
      write "Picked up passenger with a goal not route with id:"
      show id
    ]
    ]
  ]
  ;show passenger-orders
end

to drop-passengers
  foreach bus_passengers[
    let id item 0 ?
    let goal item 1 ?
    if goal = current_stop [
      drop-off-passenger id
      set free-space (free-space + 1)
    ]
  ]
  let idx 0
  foreach passenger-orders[
    let id item 0 ?
    let goal item 1 ?
    ifelse goal = current_stop[
      ;write "Dropped off passenger with ID:"
      ;show id
      drop-off-passenger id
      set free-space (free-space + 1)
      set passenger-orders remove-item idx passenger-orders
    ][
    set idx idx + 1
    ]
  ]
  ;show passenger-orders
end

to move-to-next
  if length next-stops > 0 
    [travel-to item 0 next-stops]
  
end

to pick-up-drop-same-station
  let stop-passengers get-passengers-at-stop current_stop
  if free-space > 0 [
    foreach stop-passengers[
      let id item 0 ?
      let goal item 1 ?
      if goal = current_stop[     ;This checks if the goal is same as current station
        pick-up-passenger id
        drop-off-passenger id
      ]
    ]  
  ]
end